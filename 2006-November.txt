From juvinious at gmail.com  Wed Nov  1 12:06:51 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Wed, 1 Nov 2006 19:06:51 +0800
Subject: [Openlayer-developer] cmake
Message-ID: <200611011906.51897.juvinious@gmail.com>

Yesterday I wrote up a cmake script for creating build files on different 
platforms and environments. So far it can generate makefiles for mingw, msys 
and *nix based platforms as well as MSVC vcproj files. On *nix based 
platforms it's capable of creating the lib statically or shared. On mingw and 
msys it can as well, shared being that it generates a dll. However since 
nothing is exposed in the lib by means of __dllspec(export) the lib is 
useless in that form. I recall somebody bringing up the idea that they would 
like to see it as a dll. Now with the possibility of creating it as a dll, 
what should be exposed? We can probably add in a simple preprocessor like:
#ifdef DLL_BUILD
#define DLL_FUNC __dllspec(export)
#else
#define DLL_FUNC __dllspec(import)
#endif
and prepend the functions of the library that should be exposed.
Any ideas?

Now for the MSVC related stuff. I wasn't able to get the project files to 
build since I keep getting an error C1900 
(http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
which has to do with my msvc installation.
If the environment is setup properly and all the requisite libs are installed, 
I believe that the compilation should work. In the end it should generate the 
proper openlayer.lib and accompanying files as well as build the examples.
If anybody has msvc and is willing to install cmake to give it a go, I'd be 
gratefull. Oh and the names of the libraries I have it set to looks like 
this:
alleg.lib - allegro
agl.lib - allegrogl
libpng.lib - libpng
ldpng.lib - loadpng
freetype.lib - freetype2
zlib.lib - zlib
glyph-agl.lib - glyphkeeper (if you are not using the internal render)
gdi32.lib - windows stuff ?
glu32.lib - opengl related?
opengl32.lib - opengl

If I'm missing any other libs I should be linking against please let me know 
and I'll add them in.

And if you don't know what cmake is take a look: http://www.cmake.org
I believe this is the direction where the build system should be going. Since 
it can provide us the means of allowing OpenLayer to be used in other 
environments and not limited to gcc.
And although cbuild works great, it still has the tendency to fail on some 
environments, allowing cmake to be the better alternative. Also, many FOSS 
projects (http://www.cmake.org/Wiki/CMake_Projects) are going in that 
direction as well, KDE being the top one.

If you are on windows you can download the binary installer.
It's relatively simple and straightforward.
Here's a basic run down of how to get cmake to spit out the files.
On windows:
Create a temporary directory in the openlayer root directory. Change into it 
and run "cmakesetup ../".
This will bring up a GUI for configuring it. Choose your environment (ie 
MinGW, MSVC, etc.) and go through the options fixing anything that shows red 
and then re-generate the configuration. Once you are done that hit ok. If you 
are creating vcproj files you're going to have to be patient as that takes 
some time, it'll seem like the app is hanging, just wait it out. Once it's 
done if you did makefiles for msys/mingw then just run make. If you created 
vcproj files open the OpenLayer.sln solution file with msvc and build it.

If any of you have experience working with cmake any help improving the script 
would be appreciated. If not your feedback will be just as appreciated.

Thanks. :)

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From fladimir2002 at hotmail.com  Wed Nov  1 12:53:03 2006
From: fladimir2002 at hotmail.com (Esa Tanskanen)
Date: Wed, 01 Nov 2006 13:53:03 +0200
Subject: [Openlayer-developer] cmake
In-Reply-To: <200611011906.51897.juvinious@gmail.com>
Message-ID: <BAY122-F1113A7194113B585095A07DFF80@phx.gbl>

Great work, I hope that some MSVC users read this mailing list :)


>From: "Miguel A. Gavidia" <juvinious at gmail.com>
>Reply-To: openlayer-developer at berlios.de
>To: openlayer-developer at lists.berlios.de
>Subject: [Openlayer-developer] cmake
>Date: Wed, 1 Nov 2006 19:06:51 +0800
>
>Yesterday I wrote up a cmake script for creating build files on different
>platforms and environments. So far it can generate makefiles for mingw, 
>msys
>and *nix based platforms as well as MSVC vcproj files. On *nix based
>platforms it's capable of creating the lib statically or shared. On mingw 
>and
>msys it can as well, shared being that it generates a dll. However since
>nothing is exposed in the lib by means of __dllspec(export) the lib is
>useless in that form. I recall somebody bringing up the idea that they 
>would
>like to see it as a dll. Now with the possibility of creating it as a dll,
>what should be exposed? We can probably add in a simple preprocessor like:
>#ifdef DLL_BUILD
>#define DLL_FUNC __dllspec(export)
>#else
>#define DLL_FUNC __dllspec(import)
>#endif
>and prepend the functions of the library that should be exposed.
>Any ideas?
>
>Now for the MSVC related stuff. I wasn't able to get the project files to
>build since I keep getting an error C1900
>(http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
>which has to do with my msvc installation.
>If the environment is setup properly and all the requisite libs are 
>installed,
>I believe that the compilation should work. In the end it should generate 
>the
>proper openlayer.lib and accompanying files as well as build the examples.
>If anybody has msvc and is willing to install cmake to give it a go, I'd be
>gratefull. Oh and the names of the libraries I have it set to looks like
>this:
>alleg.lib - allegro
>agl.lib - allegrogl
>libpng.lib - libpng
>ldpng.lib - loadpng
>freetype.lib - freetype2
>zlib.lib - zlib
>glyph-agl.lib - glyphkeeper (if you are not using the internal render)
>gdi32.lib - windows stuff ?
>glu32.lib - opengl related?
>opengl32.lib - opengl
>
>If I'm missing any other libs I should be linking against please let me 
>know
>and I'll add them in.
>
>And if you don't know what cmake is take a look: http://www.cmake.org
>I believe this is the direction where the build system should be going. 
>Since
>it can provide us the means of allowing OpenLayer to be used in other
>environments and not limited to gcc.
>And although cbuild works great, it still has the tendency to fail on some
>environments, allowing cmake to be the better alternative. Also, many FOSS
>projects (http://www.cmake.org/Wiki/CMake_Projects) are going in that
>direction as well, KDE being the top one.
>
>If you are on windows you can download the binary installer.
>It's relatively simple and straightforward.
>Here's a basic run down of how to get cmake to spit out the files.
>On windows:
>Create a temporary directory in the openlayer root directory. Change into 
>it
>and run "cmakesetup ../".
>This will bring up a GUI for configuring it. Choose your environment (ie
>MinGW, MSVC, etc.) and go through the options fixing anything that shows 
>red
>and then re-generate the configuration. Once you are done that hit ok. If 
>you
>are creating vcproj files you're going to have to be patient as that takes
>some time, it'll seem like the app is hanging, just wait it out. Once it's
>done if you did makefiles for msys/mingw then just run make. If you created
>vcproj files open the OpenLayer.sln solution file with msvc and build it.
>
>If any of you have experience working with cmake any help improving the 
>script
>would be appreciated. If not your feedback will be just as appreciated.
>
>Thanks. :)
>
>--
>-juvinious
>
>http://chasm.hopto.org - The Chasm - My Site
>http://openlayer.berlios.de - Openlayer
>_______________________________________________
>Openlayer-developer mailing list
>Openlayer-developer at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/openlayer-developer

_________________________________________________________________
Uutiset ja kasvot uutisten takaa. MSN Search, t?yden palvelun hakukone. 
http://search.msn.fi



From tobing at gmx.net  Wed Nov  1 21:49:59 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Wed, 01 Nov 2006 21:49:59 +0100
Subject: [Openlayer-developer] cmake
In-Reply-To: <200611011906.51897.juvinious@gmail.com>
References: <200611011906.51897.juvinious@gmail.com>
Message-ID: <20061101204959.19820@gmx.net>

I'm one of the MSVC users - so I'll try that cmake stuff out and compare it to my own vcproj-file. 

One point is, if you collect several vcproj-files into your solution, this affects linking. For example, I have all needed libraries in my solution, one vcproj-file for each: zlib, freetype, lpng, loadpng, allegrogl, allegro (and glyph-keeper, but that's not needed since it doesn't work properly). So if you put the libraries into the vcproj-file, you can't use extra vcproj-files in the same solution to be used with your link step. This is unfortunately so, because it makes distributing single vcproj-files hard, you have to decide upfront where you have vcproj-files and where not. 

For the macros to use, if you want to have dll-files as well as static library, you need to define the preprocessor macros for 3 possibilities: static lib (doesn't need any decorations), using the dll (needs the declspec(dllimport)) and building the dll (needs declspec(dllexport)). So it has to be decided which of 'static lib' and 'using as dll' has to be the default. 

I would propose that it should be done similar to the allegro library, which also offers both static lib and dll building, and discriminates using a certain preprocessor define (have to look up which it was). 

Which symbols have to be exported? I woudl try to export at least everything needed in the examples, but in the end, Fladimir knows best. Once it works, it should be quite easy to add missing exports to the header files. 

I'm not sure if I have the time to go complete this task in the next few days, but I'll try and at least give it a start, if that's OK for you. 

best regards
tobing



> Yesterday I wrote up a cmake script for creating build files on different 
> platforms and environments. So far it can generate makefiles for mingw,
> msys 
> and *nix based platforms as well as MSVC vcproj files. On *nix based 
> platforms it's capable of creating the lib statically or shared. On mingw
> and 
> msys it can as well, shared being that it generates a dll. However since 
> nothing is exposed in the lib by means of __dllspec(export) the lib is 
> useless in that form. I recall somebody bringing up the idea that they
> would 
> like to see it as a dll. Now with the possibility of creating it as a dll,
> what should be exposed? We can probably add in a simple preprocessor like:
> #ifdef DLL_BUILD
> #define DLL_FUNC __dllspec(export)
> #else
> #define DLL_FUNC __dllspec(import)
> #endif
> and prepend the functions of the library that should be exposed.
> Any ideas?
> 
> Now for the MSVC related stuff. I wasn't able to get the project files to 
> build since I keep getting an error C1900 
> (http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
> which has to do with my msvc installation.
> If the environment is setup properly and all the requisite libs are
> installed, 
> I believe that the compilation should work. In the end it should generate
> the 
> proper openlayer.lib and accompanying files as well as build the examples.
> If anybody has msvc and is willing to install cmake to give it a go, I'd
> be 
> gratefull. Oh and the names of the libraries I have it set to looks like 
> this:
> alleg.lib - allegro
> agl.lib - allegrogl
> libpng.lib - libpng
> ldpng.lib - loadpng
> freetype.lib - freetype2
> zlib.lib - zlib
> glyph-agl.lib - glyphkeeper (if you are not using the internal render)
> gdi32.lib - windows stuff ?
> glu32.lib - opengl related?
> opengl32.lib - opengl
> 
> If I'm missing any other libs I should be linking against please let me
> know 
> and I'll add them in.
> 
> And if you don't know what cmake is take a look: http://www.cmake.org
> I believe this is the direction where the build system should be going.
> Since 
> it can provide us the means of allowing OpenLayer to be used in other 
> environments and not limited to gcc.
> And although cbuild works great, it still has the tendency to fail on some
> environments, allowing cmake to be the better alternative. Also, many FOSS
> projects (http://www.cmake.org/Wiki/CMake_Projects) are going in that 
> direction as well, KDE being the top one.
> 
> If you are on windows you can download the binary installer.
> It's relatively simple and straightforward.
> Here's a basic run down of how to get cmake to spit out the files.
> On windows:
> Create a temporary directory in the openlayer root directory. Change into
> it 
> and run "cmakesetup ../".
> This will bring up a GUI for configuring it. Choose your environment (ie 
> MinGW, MSVC, etc.) and go through the options fixing anything that shows
> red 
> and then re-generate the configuration. Once you are done that hit ok. If
> you 
> are creating vcproj files you're going to have to be patient as that takes
> some time, it'll seem like the app is hanging, just wait it out. Once it's
> done if you did makefiles for msys/mingw then just run make. If you
> created 
> vcproj files open the OpenLayer.sln solution file with msvc and build it.
> 
> If any of you have experience working with cmake any help improving the
> script 
> would be appreciated. If not your feedback will be just as appreciated.

-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de


From neil at retrospec.sgn.net  Wed Nov  1 23:07:07 2006
From: neil at retrospec.sgn.net (Neil)
Date: Wed, 01 Nov 2006 22:07:07 +0000
Subject: [Openlayer-developer] cmake
In-Reply-To: <20061101204959.19820@gmx.net>
References: <200611011906.51897.juvinious@gmail.com>
	<20061101204959.19820@gmx.net>
Message-ID: <45491A8B.3050309@retrospec.sgn.net>

One thing I did and I don't know if it's worth incorporating as an 
option is that I changed the build to do two things:

1. use zlib static library so the dll does not have to be shipped
2. combined freetype and glyphkeeper into one library rather than two 
(though given glyphkeeper is being removed this might not be relevant)

Neil.


tobing at gmx.net wrote:
> I'm one of the MSVC users - so I'll try that cmake stuff out and compare it to my own vcproj-file. 
>
> One point is, if you collect several vcproj-files into your solution, this affects linking. For example, I have all needed libraries in my solution, one vcproj-file for each: zlib, freetype, lpng, loadpng, allegrogl, allegro (and glyph-keeper, but that's not needed since it doesn't work properly). So if you put the libraries into the vcproj-file, you can't use extra vcproj-files in the same solution to be used with your link step. This is unfortunately so, because it makes distributing single vcproj-files hard, you have to decide upfront where you have vcproj-files and where not. 
>
> For the macros to use, if you want to have dll-files as well as static library, you need to define the preprocessor macros for 3 possibilities: static lib (doesn't need any decorations), using the dll (needs the declspec(dllimport)) and building the dll (needs declspec(dllexport)). So it has to be decided which of 'static lib' and 'using as dll' has to be the default. 
>
> I would propose that it should be done similar to the allegro library, which also offers both static lib and dll building, and discriminates using a certain preprocessor define (have to look up which it was). 
>
> Which symbols have to be exported? I woudl try to export at least everything needed in the examples, but in the end, Fladimir knows best. Once it works, it should be quite easy to add missing exports to the header files. 
>
> I'm not sure if I have the time to go complete this task in the next few days, but I'll try and at least give it a start, if that's OK for you. 
>
> best regards
> tobing
>
>
>
>   
>> Yesterday I wrote up a cmake script for creating build files on different 
>> platforms and environments. So far it can generate makefiles for mingw,
>> msys 
>> and *nix based platforms as well as MSVC vcproj files. On *nix based 
>> platforms it's capable of creating the lib statically or shared. On mingw
>> and 
>> msys it can as well, shared being that it generates a dll. However since 
>> nothing is exposed in the lib by means of __dllspec(export) the lib is 
>> useless in that form. I recall somebody bringing up the idea that they
>> would 
>> like to see it as a dll. Now with the possibility of creating it as a dll,
>> what should be exposed? We can probably add in a simple preprocessor like:
>> #ifdef DLL_BUILD
>> #define DLL_FUNC __dllspec(export)
>> #else
>> #define DLL_FUNC __dllspec(import)
>> #endif
>> and prepend the functions of the library that should be exposed.
>> Any ideas?
>>
>> Now for the MSVC related stuff. I wasn't able to get the project files to 
>> build since I keep getting an error C1900 
>> (http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
>> which has to do with my msvc installation.
>> If the environment is setup properly and all the requisite libs are
>> installed, 
>> I believe that the compilation should work. In the end it should generate
>> the 
>> proper openlayer.lib and accompanying files as well as build the examples.
>> If anybody has msvc and is willing to install cmake to give it a go, I'd
>> be 
>> gratefull. Oh and the names of the libraries I have it set to looks like 
>> this:
>> alleg.lib - allegro
>> agl.lib - allegrogl
>> libpng.lib - libpng
>> ldpng.lib - loadpng
>> freetype.lib - freetype2
>> zlib.lib - zlib
>> glyph-agl.lib - glyphkeeper (if you are not using the internal render)
>> gdi32.lib - windows stuff ?
>> glu32.lib - opengl related?
>> opengl32.lib - opengl
>>
>> If I'm missing any other libs I should be linking against please let me
>> know 
>> and I'll add them in.
>>
>> And if you don't know what cmake is take a look: http://www.cmake.org
>> I believe this is the direction where the build system should be going.
>> Since 
>> it can provide us the means of allowing OpenLayer to be used in other 
>> environments and not limited to gcc.
>> And although cbuild works great, it still has the tendency to fail on some
>> environments, allowing cmake to be the better alternative. Also, many FOSS
>> projects (http://www.cmake.org/Wiki/CMake_Projects) are going in that 
>> direction as well, KDE being the top one.
>>
>> If you are on windows you can download the binary installer.
>> It's relatively simple and straightforward.
>> Here's a basic run down of how to get cmake to spit out the files.
>> On windows:
>> Create a temporary directory in the openlayer root directory. Change into
>> it 
>> and run "cmakesetup ../".
>> This will bring up a GUI for configuring it. Choose your environment (ie 
>> MinGW, MSVC, etc.) and go through the options fixing anything that shows
>> red 
>> and then re-generate the configuration. Once you are done that hit ok. If
>> you 
>> are creating vcproj files you're going to have to be patient as that takes
>> some time, it'll seem like the app is hanging, just wait it out. Once it's
>> done if you did makefiles for msys/mingw then just run make. If you
>> created 
>> vcproj files open the OpenLayer.sln solution file with msvc and build it.
>>
>> If any of you have experience working with cmake any help improving the
>> script 
>> would be appreciated. If not your feedback will be just as appreciated.
>>     
>
>   



From fladimir2002 at hotmail.com  Wed Nov  1 23:10:10 2006
From: fladimir2002 at hotmail.com (Esa Tanskanen)
Date: Thu, 02 Nov 2006 00:10:10 +0200
Subject: [Openlayer-developer] cmake
In-Reply-To: <20061101204959.19820@gmx.net>
Message-ID: <BAY122-F346EAA9C70C6CD37691DACDFF80@phx.gbl>

I've never made a DLL, but I guess any function which isn't inlined should 
be exported, right?


>From: tobing at gmx.net
>Reply-To: openlayer-developer at berlios.de
>To: openlayer-developer at berlios.de
>Subject: Re: [Openlayer-developer] cmake
>Date: Wed, 01 Nov 2006 21:49:59 +0100
>
>I'm one of the MSVC users - so I'll try that cmake stuff out and compare it 
>to my own vcproj-file.
>
>One point is, if you collect several vcproj-files into your solution, this 
>affects linking. For example, I have all needed libraries in my solution, 
>one vcproj-file for each: zlib, freetype, lpng, loadpng, allegrogl, allegro 
>(and glyph-keeper, but that's not needed since it doesn't work properly). 
>So if you put the libraries into the vcproj-file, you can't use extra 
>vcproj-files in the same solution to be used with your link step. This is 
>unfortunately so, because it makes distributing single vcproj-files hard, 
>you have to decide upfront where you have vcproj-files and where not.
>
>For the macros to use, if you want to have dll-files as well as static 
>library, you need to define the preprocessor macros for 3 possibilities: 
>static lib (doesn't need any decorations), using the dll (needs the 
>declspec(dllimport)) and building the dll (needs declspec(dllexport)). So 
>it has to be decided which of 'static lib' and 'using as dll' has to be the 
>default.
>
>I would propose that it should be done similar to the allegro library, 
>which also offers both static lib and dll building, and discriminates using 
>a certain preprocessor define (have to look up which it was).
>
>Which symbols have to be exported? I woudl try to export at least 
>everything needed in the examples, but in the end, Fladimir knows best. 
>Once it works, it should be quite easy to add missing exports to the header 
>files.
>
>I'm not sure if I have the time to go complete this task in the next few 
>days, but I'll try and at least give it a start, if that's OK for you.
>
>best regards
>tobing
>
>
>
> > Yesterday I wrote up a cmake script for creating build files on 
>different
> > platforms and environments. So far it can generate makefiles for mingw,
> > msys
> > and *nix based platforms as well as MSVC vcproj files. On *nix based
> > platforms it's capable of creating the lib statically or shared. On 
>mingw
> > and
> > msys it can as well, shared being that it generates a dll. However since
> > nothing is exposed in the lib by means of __dllspec(export) the lib is
> > useless in that form. I recall somebody bringing up the idea that they
> > would
> > like to see it as a dll. Now with the possibility of creating it as a 
>dll,
> > what should be exposed? We can probably add in a simple preprocessor 
>like:
> > #ifdef DLL_BUILD
> > #define DLL_FUNC __dllspec(export)
> > #else
> > #define DLL_FUNC __dllspec(import)
> > #endif
> > and prepend the functions of the library that should be exposed.
> > Any ideas?
> >
> > Now for the MSVC related stuff. I wasn't able to get the project files 
>to
> > build since I keep getting an error C1900
> > (http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
> > which has to do with my msvc installation.
> > If the environment is setup properly and all the requisite libs are
> > installed,
> > I believe that the compilation should work. In the end it should 
>generate
> > the
> > proper openlayer.lib and accompanying files as well as build the 
>examples.
> > If anybody has msvc and is willing to install cmake to give it a go, I'd
> > be
> > gratefull. Oh and the names of the libraries I have it set to looks like
> > this:
> > alleg.lib - allegro
> > agl.lib - allegrogl
> > libpng.lib - libpng
> > ldpng.lib - loadpng
> > freetype.lib - freetype2
> > zlib.lib - zlib
> > glyph-agl.lib - glyphkeeper (if you are not using the internal render)
> > gdi32.lib - windows stuff ?
> > glu32.lib - opengl related?
> > opengl32.lib - opengl
> >
> > If I'm missing any other libs I should be linking against please let me
> > know
> > and I'll add them in.
> >
> > And if you don't know what cmake is take a look: http://www.cmake.org
> > I believe this is the direction where the build system should be going.
> > Since
> > it can provide us the means of allowing OpenLayer to be used in other
> > environments and not limited to gcc.
> > And although cbuild works great, it still has the tendency to fail on 
>some
> > environments, allowing cmake to be the better alternative. Also, many 
>FOSS
> > projects (http://www.cmake.org/Wiki/CMake_Projects) are going in that
> > direction as well, KDE being the top one.
> >
> > If you are on windows you can download the binary installer.
> > It's relatively simple and straightforward.
> > Here's a basic run down of how to get cmake to spit out the files.
> > On windows:
> > Create a temporary directory in the openlayer root directory. Change 
>into
> > it
> > and run "cmakesetup ../".
> > This will bring up a GUI for configuring it. Choose your environment (ie
> > MinGW, MSVC, etc.) and go through the options fixing anything that shows
> > red
> > and then re-generate the configuration. Once you are done that hit ok. 
>If
> > you
> > are creating vcproj files you're going to have to be patient as that 
>takes
> > some time, it'll seem like the app is hanging, just wait it out. Once 
>it's
> > done if you did makefiles for msys/mingw then just run make. If you
> > created
> > vcproj files open the OpenLayer.sln solution file with msvc and build 
>it.
> >
> > If any of you have experience working with cmake any help improving the
> > script
> > would be appreciated. If not your feedback will be just as appreciated.
>
>--
>Viele Gr?sse / Best Regards / Amiti?s
>Tobing
>
>http://www.staedtebauen.de
>_______________________________________________
>Openlayer-developer mailing list
>Openlayer-developer at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/openlayer-developer

_________________________________________________________________
Uutiset ja kasvot uutisten takaa. MSN Search, t?yden palvelun hakukone. 
http://search.msn.fi



From juvinious at gmail.com  Thu Nov  2 00:40:23 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Thu, 2 Nov 2006 07:40:23 +0800
Subject: [Openlayer-developer] cmake
In-Reply-To: <20061101204959.19820@gmx.net>
References: <200611011906.51897.juvinious@gmail.com>
	<20061101204959.19820@gmx.net>
Message-ID: <200611020740.23291.juvinious@gmail.com>

??? 02 11? 2006 04:49?tobing at gmx.net ????????:
> I'm one of the MSVC users - so I'll try that cmake stuff out and compare it
> to my own vcproj-file.
>
> One point is, if you collect several vcproj-files into your solution, this
> affects linking. For example, I have all needed libraries in my solution,
> one vcproj-file for each: zlib, freetype, lpng, loadpng, allegrogl, allegro
> (and glyph-keeper, but that's not needed since it doesn't work properly).
> So if you put the libraries into the vcproj-file, you can't use extra
> vcproj-files in the same solution to be used with your link step. This is
> unfortunately so, because it makes distributing single vcproj-files hard,
> you have to decide upfront where you have vcproj-files and where not.
Well the point is not to distribute a static set of vcproj files. Since cmake 
generates the vcproj files and a solution for OpenLayer depending on your 
environments setup. I'm under the impression that you are building everything 
including the requisite libraries from scratch?
>
> For the macros to use, if you want to have dll-files as well as static
> library, you need to define the preprocessor macros for 3 possibilities:
> static lib (doesn't need any decorations), using the dll (needs the
> declspec(dllimport)) and building the dll (needs declspec(dllexport)). So
> it has to be decided which of 'static lib' and 'using as dll' has to be the
> default.
>
> I would propose that it should be done similar to the allegro library,
> which also offers both static lib and dll building, and discriminates using
> a certain preprocessor define (have to look up which it was).
>
> Which symbols have to be exported? I woudl try to export at least
> everything needed in the examples, but in the end, Fladimir knows best.
> Once it works, it should be quite easy to add missing exports to the header
> files.
>
> I'm not sure if I have the time to go complete this task in the next few
> days, but I'll try and at least give it a start, if that's OK for you.
I'm not quite sure what would be needed to export. As you say Fladimir knows 
best. :)
There is no hurry to get this done, so whenever you have time to add in stuff 
would be appreciated. Btw did you ever get svn access so that you can commit 
your changes?
>
> best regards
> tobing
>
> > Yesterday I wrote up a cmake script for creating build files on different
> > platforms and environments. So far it can generate makefiles for mingw,
> > msys
> > and *nix based platforms as well as MSVC vcproj files. On *nix based
> > platforms it's capable of creating the lib statically or shared. On mingw
> > and
> > msys it can as well, shared being that it generates a dll. However since
> > nothing is exposed in the lib by means of __dllspec(export) the lib is
> > useless in that form. I recall somebody bringing up the idea that they
> > would
> > like to see it as a dll. Now with the possibility of creating it as a
> > dll, what should be exposed? We can probably add in a simple preprocessor
> > like: #ifdef DLL_BUILD
> > #define DLL_FUNC __dllspec(export)
> > #else
> > #define DLL_FUNC __dllspec(import)
> > #endif
> > and prepend the functions of the library that should be exposed.
> > Any ideas?
> >
> > Now for the MSVC related stuff. I wasn't able to get the project files to
> > build since I keep getting an error C1900
> > (http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
> > which has to do with my msvc installation.
> > If the environment is setup properly and all the requisite libs are
> > installed,
> > I believe that the compilation should work. In the end it should generate
> > the
> > proper openlayer.lib and accompanying files as well as build the
> > examples. If anybody has msvc and is willing to install cmake to give it
> > a go, I'd be
> > gratefull. Oh and the names of the libraries I have it set to looks like
> > this:
> > alleg.lib - allegro
> > agl.lib - allegrogl
> > libpng.lib - libpng
> > ldpng.lib - loadpng
> > freetype.lib - freetype2
> > zlib.lib - zlib
> > glyph-agl.lib - glyphkeeper (if you are not using the internal render)
> > gdi32.lib - windows stuff ?
> > glu32.lib - opengl related?
> > opengl32.lib - opengl
> >
> > If I'm missing any other libs I should be linking against please let me
> > know
> > and I'll add them in.
> >
> > And if you don't know what cmake is take a look: http://www.cmake.org
> > I believe this is the direction where the build system should be going.
> > Since
> > it can provide us the means of allowing OpenLayer to be used in other
> > environments and not limited to gcc.
> > And although cbuild works great, it still has the tendency to fail on
> > some environments, allowing cmake to be the better alternative. Also,
> > many FOSS projects (http://www.cmake.org/Wiki/CMake_Projects) are going
> > in that direction as well, KDE being the top one.
> >
> > If you are on windows you can download the binary installer.
> > It's relatively simple and straightforward.
> > Here's a basic run down of how to get cmake to spit out the files.
> > On windows:
> > Create a temporary directory in the openlayer root directory. Change into
> > it
> > and run "cmakesetup ../".
> > This will bring up a GUI for configuring it. Choose your environment (ie
> > MinGW, MSVC, etc.) and go through the options fixing anything that shows
> > red
> > and then re-generate the configuration. Once you are done that hit ok. If
> > you
> > are creating vcproj files you're going to have to be patient as that
> > takes some time, it'll seem like the app is hanging, just wait it out.
> > Once it's done if you did makefiles for msys/mingw then just run make. If
> > you created
> > vcproj files open the OpenLayer.sln solution file with msvc and build it.
> >
> > If any of you have experience working with cmake any help improving the
> > script
> > would be appreciated. If not your feedback will be just as appreciated.

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From juvinious at gmail.com  Thu Nov  2 00:46:56 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Thu, 2 Nov 2006 07:46:56 +0800
Subject: [Openlayer-developer] cmake
In-Reply-To: <45491A8B.3050309@retrospec.sgn.net>
References: <200611011906.51897.juvinious@gmail.com>
	<20061101204959.19820@gmx.net> <45491A8B.3050309@retrospec.sgn.net>
Message-ID: <200611020746.56402.juvinious@gmail.com>

That can be an option, I can set it up so that you can choose whether to 
include static versions of libraries or not.
Hmm, I'd say stick with using the internal renderer for fonts unless you 
really need GlyphKeeper. The only advantage GlyphKeeper has over the internal 
renderer is the ability to apply Transforms to fonts in realtime. However you 
can simulate that with the internal one by blitting your text to a 
transparent bitmap and then apply your Transforms to the bitmap, then 
render. :|
??? 02 11? 2006 06:07?Neil ????????:
> One thing I did and I don't know if it's worth incorporating as an
> option is that I changed the build to do two things:
>
> 1. use zlib static library so the dll does not have to be shipped
> 2. combined freetype and glyphkeeper into one library rather than two
> (though given glyphkeeper is being removed this might not be relevant)
>
> Neil.
>
> tobing at gmx.net wrote:
> > I'm one of the MSVC users - so I'll try that cmake stuff out and compare
> > it to my own vcproj-file.
> >
> > One point is, if you collect several vcproj-files into your solution,
> > this affects linking. For example, I have all needed libraries in my
> > solution, one vcproj-file for each: zlib, freetype, lpng, loadpng,
> > allegrogl, allegro (and glyph-keeper, but that's not needed since it
> > doesn't work properly). So if you put the libraries into the vcproj-file,
> > you can't use extra vcproj-files in the same solution to be used with
> > your link step. This is unfortunately so, because it makes distributing
> > single vcproj-files hard, you have to decide upfront where you have
> > vcproj-files and where not.
> >
> > For the macros to use, if you want to have dll-files as well as static
> > library, you need to define the preprocessor macros for 3 possibilities:
> > static lib (doesn't need any decorations), using the dll (needs the
> > declspec(dllimport)) and building the dll (needs declspec(dllexport)). So
> > it has to be decided which of 'static lib' and 'using as dll' has to be
> > the default.
> >
> > I would propose that it should be done similar to the allegro library,
> > which also offers both static lib and dll building, and discriminates
> > using a certain preprocessor define (have to look up which it was).
> >
> > Which symbols have to be exported? I woudl try to export at least
> > everything needed in the examples, but in the end, Fladimir knows best.
> > Once it works, it should be quite easy to add missing exports to the
> > header files.
> >
> > I'm not sure if I have the time to go complete this task in the next few
> > days, but I'll try and at least give it a start, if that's OK for you.
> >
> > best regards
> > tobing
> >
> >> Yesterday I wrote up a cmake script for creating build files on
> >> different platforms and environments. So far it can generate makefiles
> >> for mingw, msys
> >> and *nix based platforms as well as MSVC vcproj files. On *nix based
> >> platforms it's capable of creating the lib statically or shared. On
> >> mingw and
> >> msys it can as well, shared being that it generates a dll. However since
> >> nothing is exposed in the lib by means of __dllspec(export) the lib is
> >> useless in that form. I recall somebody bringing up the idea that they
> >> would
> >> like to see it as a dll. Now with the possibility of creating it as a
> >> dll, what should be exposed? We can probably add in a simple
> >> preprocessor like: #ifdef DLL_BUILD
> >> #define DLL_FUNC __dllspec(export)
> >> #else
> >> #define DLL_FUNC __dllspec(import)
> >> #endif
> >> and prepend the functions of the library that should be exposed.
> >> Any ideas?
> >>
> >> Now for the MSVC related stuff. I wasn't able to get the project files
> >> to build since I keep getting an error C1900
> >> (http://msdn2.microsoft.com/en-us/library/ks07be9f.aspx)
> >> which has to do with my msvc installation.
> >> If the environment is setup properly and all the requisite libs are
> >> installed,
> >> I believe that the compilation should work. In the end it should
> >> generate the
> >> proper openlayer.lib and accompanying files as well as build the
> >> examples. If anybody has msvc and is willing to install cmake to give it
> >> a go, I'd be
> >> gratefull. Oh and the names of the libraries I have it set to looks like
> >> this:
> >> alleg.lib - allegro
> >> agl.lib - allegrogl
> >> libpng.lib - libpng
> >> ldpng.lib - loadpng
> >> freetype.lib - freetype2
> >> zlib.lib - zlib
> >> glyph-agl.lib - glyphkeeper (if you are not using the internal render)
> >> gdi32.lib - windows stuff ?
> >> glu32.lib - opengl related?
> >> opengl32.lib - opengl
> >>
> >> If I'm missing any other libs I should be linking against please let me
> >> know
> >> and I'll add them in.
> >>
> >> And if you don't know what cmake is take a look: http://www.cmake.org
> >> I believe this is the direction where the build system should be going.
> >> Since
> >> it can provide us the means of allowing OpenLayer to be used in other
> >> environments and not limited to gcc.
> >> And although cbuild works great, it still has the tendency to fail on
> >> some environments, allowing cmake to be the better alternative. Also,
> >> many FOSS projects (http://www.cmake.org/Wiki/CMake_Projects) are going
> >> in that direction as well, KDE being the top one.
> >>
> >> If you are on windows you can download the binary installer.
> >> It's relatively simple and straightforward.
> >> Here's a basic run down of how to get cmake to spit out the files.
> >> On windows:
> >> Create a temporary directory in the openlayer root directory. Change
> >> into it
> >> and run "cmakesetup ../".
> >> This will bring up a GUI for configuring it. Choose your environment (ie
> >> MinGW, MSVC, etc.) and go through the options fixing anything that shows
> >> red
> >> and then re-generate the configuration. Once you are done that hit ok.
> >> If you
> >> are creating vcproj files you're going to have to be patient as that
> >> takes some time, it'll seem like the app is hanging, just wait it out.
> >> Once it's done if you did makefiles for msys/mingw then just run make.
> >> If you created
> >> vcproj files open the OpenLayer.sln solution file with msvc and build
> >> it.
> >>
> >> If any of you have experience working with cmake any help improving the
> >> script
> >> would be appreciated. If not your feedback will be just as appreciated.
>
> _______________________________________________
> Openlayer-developer mailing list
> Openlayer-developer at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/openlayer-developer

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From tobing at gmx.net  Thu Nov  2 09:22:05 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Thu, 02 Nov 2006 09:22:05 +0100
Subject: [Openlayer-developer] cmake
In-Reply-To: <BAY122-F346EAA9C70C6CD37691DACDFF80@phx.gbl>
References: <BAY122-F346EAA9C70C6CD37691DACDFF80@phx.gbl>
Message-ID: <20061102082205.188440@gmx.net>


> I've never made a DLL, but I guess any function which isn't inlined 
> should be exported, right?

That would be the maximum, and is not necessarily a good idea. Normally you export all the functions you provide for your applications, but not those you use internally and don't want to provide to your applications. That way you can define your API and hide the internal functions from the application. 


-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de


From tobing at gmx.net  Thu Nov  2 09:32:49 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Thu, 02 Nov 2006 09:32:49 +0100
Subject: [Openlayer-developer] cmake
In-Reply-To: <200611020740.23291.juvinious@gmail.com>
References: <200611011906.51897.juvinious@gmail.com>
	<20061101204959.19820@gmx.net> <200611020740.23291.juvinious@gmail.com>
Message-ID: <20061102083249.188420@gmx.net>


> Well the point is not to distribute a static set of vcproj files. Since
> cmake generates the vcproj files and a solution for OpenLayer depending 
> on your environments setup. 

I'll definitely have to look into cmake. 

> I'm under the impression that you are building everything including the 
> requisite libraries from scratch?

Correct. Usually I prefer to have all libraries at my fingertips, including full debug builds with all possible help, browser infos etc, and I also like to adjust compiler options for the release builds. There's hardly a better way to get understanding what a function is doing than single stepping into it from your program. 

It's also very comfortable to have the full sources available in the IDE, because I use tools such as Visual Assist and the WorkspaceWhiz, that give be very fast navigation through everything. 



> There is no hurry to get this done, so whenever you have time to add in
> stuff would be appreciated. Btw did you ever get svn access so that you 
> can commit your changes?

I haven't tried to submit anything yet, but I can get files from SVN. To be able to submit anything I just need the permission to submit to the depot. 


-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de


From juvinious at gmail.com  Fri Nov  3 09:13:33 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Fri, 3 Nov 2006 16:13:33 +0800
Subject: [Openlayer-developer] cmake
In-Reply-To: <20061102083249.188420@gmx.net>
References: <200611011906.51897.juvinious@gmail.com>
	<200611020740.23291.juvinious@gmail.com>
	<20061102083249.188420@gmx.net>
Message-ID: <200611031613.33784.juvinious@gmail.com>

??? 02 11? 2006 16:32?tobing at gmx.net ????????:
> > Well the point is not to distribute a static set of vcproj files. Since
> > cmake generates the vcproj files and a solution for OpenLayer depending
> > on your environments setup.
>
> I'll definitely have to look into cmake.
It would help. :D
>
> > I'm under the impression that you are building everything including the
> > requisite libraries from scratch?
>
> Correct. Usually I prefer to have all libraries at my fingertips, including
> full debug builds with all possible help, browser infos etc, and I also
> like to adjust compiler options for the release builds. There's hardly a
> better way to get understanding what a function is doing than single
> stepping into it from your program.
>
Well with the generated project files you can just include the solution into 
the rest of your project couldn't you? I don't think it should conflict with 
your setup.
> It's also very comfortable to have the full sources available in the IDE,
> because I use tools such as Visual Assist and the WorkspaceWhiz, that give
> be very fast navigation through everything.
>
> > There is no hurry to get this done, so whenever you have time to add in
> > stuff would be appreciated. Btw did you ever get svn access so that you
> > can commit your changes?
>
> I haven't tried to submit anything yet, but I can get files from SVN. To be
> able to submit anything I just need the permission to submit to the depot.
Yeah I was under the impression that somebody gave you access. I'll look into 
it. 

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From juvinious at gmail.com  Sun Nov  5 10:45:35 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Sun, 5 Nov 2006 17:45:35 +0800
Subject: [Openlayer-developer] MSVC
Message-ID: <200611051745.35315.juvinious@gmail.com>

This is a question to the msvc guys.
It seems there is an issue with linking the library together. All the source 
compiles fine, with some warnings, but dies at the linking stage.
I get a C1900 Fatal Error, reporting that 2 tools do not match versions or 
something. Looking the error up on MSDN is not descriptive enough and the 
output of the error just doesn't give enough clues as to what exactly is 
wrong. I've had this happen on two computers and somebody else I was asking 
to try it out has reported the same issue. Is there a specific reason as to 
why this occurs, I can't seem to remedy this. Is there something I'm 
forgetting to add or link against? All the other requisite libraries are 
fine, no warning of them being incorrect or problematic, even tested them out 
on their own. Creating a solution from scratch and adding everything by hand 
also gives me the same problem. I'm hoping to resolve this issue so I can 
improve the way cmake creates the OpenLayer solution.

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From neil at retrospec.sgn.net  Sun Nov  5 10:59:24 2006
From: neil at retrospec.sgn.net (Neil)
Date: Sun, 05 Nov 2006 09:59:24 +0000
Subject: [Openlayer-developer] MSVC
In-Reply-To: <200611051745.35315.juvinious@gmail.com>
References: <200611051745.35315.juvinious@gmail.com>
Message-ID: <454DB5FC.7030605@retrospec.sgn.net>

Do you have more than one version of MSVC installed, or maybe in your 
path it is finding another file with the same name as the compiler?

Neil

Miguel A. Gavidia wrote:
> This is a question to the msvc guys.
> It seems there is an issue with linking the library together. All the source 
> compiles fine, with some warnings, but dies at the linking stage.
> I get a C1900 Fatal Error, reporting that 2 tools do not match versions or 
> something. Looking the error up on MSDN is not descriptive enough and the 
> output of the error just doesn't give enough clues as to what exactly is 
> wrong. I've had this happen on two computers and somebody else I was asking 
> to try it out has reported the same issue. Is there a specific reason as to 
> why this occurs, I can't seem to remedy this. Is there something I'm 
> forgetting to add or link against? All the other requisite libraries are 
> fine, no warning of them being incorrect or problematic, even tested them out 
> on their own. Creating a solution from scratch and adding everything by hand 
> also gives me the same problem. I'm hoping to resolve this issue so I can 
> improve the way cmake creates the OpenLayer solution.
>
>   



From neil at retrospec.sgn.net  Sun Nov  5 11:01:31 2006
From: neil at retrospec.sgn.net (Neil)
Date: Sun, 05 Nov 2006 10:01:31 +0000
Subject: [Openlayer-developer] MSVC
In-Reply-To: <454DB5FC.7030605@retrospec.sgn.net>
References: <200611051745.35315.juvinious@gmail.com>
	<454DB5FC.7030605@retrospec.sgn.net>
Message-ID: <454DB67B.4030702@retrospec.sgn.net>

This will probably be confirmed if you post back the version numbers it 
references.

Neil.

Neil wrote:
> Do you have more than one version of MSVC installed, or maybe in your 
> path it is finding another file with the same name as the compiler?
>
> Neil
>
> Miguel A. Gavidia wrote:
>   
>> This is a question to the msvc guys.
>> It seems there is an issue with linking the library together. All the source 
>> compiles fine, with some warnings, but dies at the linking stage.
>> I get a C1900 Fatal Error, reporting that 2 tools do not match versions or 
>> something. Looking the error up on MSDN is not descriptive enough and the 
>> output of the error just doesn't give enough clues as to what exactly is 
>> wrong. I've had this happen on two computers and somebody else I was asking 
>> to try it out has reported the same issue. Is there a specific reason as to 
>> why this occurs, I can't seem to remedy this. Is there something I'm 
>> forgetting to add or link against? All the other requisite libraries are 
>> fine, no warning of them being incorrect or problematic, even tested them out 
>> on their own. Creating a solution from scratch and adding everything by hand 
>> also gives me the same problem. I'm hoping to resolve this issue so I can 
>> improve the way cmake creates the OpenLayer solution.
>>
>>   
>>     
>
> _______________________________________________
> Openlayer-developer mailing list
> Openlayer-developer at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/openlayer-developer
>
>
>   



From tobing at gmx.net  Sun Nov  5 11:26:07 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Sun, 05 Nov 2006 11:26:07 +0100
Subject: [Openlayer-developer] MSVC
In-Reply-To: <454DB5FC.7030605@retrospec.sgn.net>
References: <200611051745.35315.juvinious@gmail.com>
	<454DB5FC.7030605@retrospec.sgn.net>
Message-ID: <20061105102607.55590@gmx.net>

I have just compiled and linked, for me it's all fine. I have installed only MSVC 7.1 here, but several different versions in the office. If properly installed, which mostly means that you have to install the older versions first, newer versions later, and NOT let the studio register its tools with the environment, they should work all fine. 

Problems may arise if you let several studios put their environment variables into the default, or if you have other dlls with the same name in your path, maybe some of MinGW... 


> Do you have more than one version of MSVC installed, or maybe in your 
> path it is finding another file with the same name as the compiler?

-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de



From juvinious at gmail.com  Mon Nov  6 10:16:31 2006
From: juvinious at gmail.com (Miguel Gavidia)
Date: Mon, 6 Nov 2006 17:16:31 +0800
Subject: [Openlayer-developer] MSVC
In-Reply-To: <200611051745.35315.juvinious@gmail.com>
References: <200611051745.35315.juvinious@gmail.com>
Message-ID: <7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>

Ok here is the compilation log. At the end the C1900 error is displayed. I
removed msvc from my path also just in case. I don't know what p1 and p2
are, it's not very descriptive. :x

------ Build started: Project: openlayer, Configuration: Debug Win32 ------
Compiling...
Transforms.cpp
TextureInfo.cpp
TexturedPoly.cpp
..\src\TexturedPoly.cpp(156) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(160) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(160) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(161) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(162) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(163) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(165) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(166) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(167) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(170) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(171) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(174) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
..\src\TexturedPoly.cpp(175) : warning C4288: nonstandard extension used :
'iter' : loop control variable declared in the for-loop is used outside the
for-loop scope; it conflicts with the declaration in the outer scope
        ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
        ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
TextRenderer.cpp
Shape.cpp
Setup.cpp
..\src\Setup.cpp(41) : warning C4800: 'int' : forcing value to bool 'true'
or 'false' (performance warning)
..\src\Setup.cpp(41) : warning C4800: 'int' : forcing value to bool 'true'
or 'false' (performance warning)
Settings.cpp
Rgba.cpp
RenderModes.cpp
Rectangle.cpp
Polygon.cpp
Point.cpp
Placement.cpp
PendingLoad.cpp
Matrix.cpp
LineStrip.cpp
Line.cpp
Internal.cpp
Glyph.cpp
..\src\Glyph.cpp(108) : warning C4554: '>>' : check operator precedence for
possible error; use parentheses to clarify precedence
GlDriver.cpp
Generating Code...
Compiling...
GfxRend.cpp
General.cpp
GarbageCollector.cpp
Framebuffer.cpp
FpsCounter.cpp
Effects.cpp
Collisions.cpp
Circle.cpp
Canvas.cpp
Blenders.cpp
Bitmap.cpp
..\src\Bitmap.cpp(145) : warning C4996: 'sprintf' was declared deprecated
        C:\Program Files\Microsoft Visual Studio 8\VC\include\stdio.h(345) :
see declaration of 'sprintf'
        Message: 'This function or variable may be unsafe. Consider using
sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_DEPRECATE. See
online help for details.'
..\src\Bitmap.cpp(632) : warning C4800: 'int' : forcing value to bool 'true'
or 'false' (performance warning)
Animation.cpp
Generating Code...
Compiling manifest to resources...
Linking...
fatal error C1900: Il mismatch between 'P1' version '20060201' and 'P2'
version '20050411'
LINK : fatal error LNK1257: code generation failed
Build log was saved at "
file://c:\mingw\projects\openlayer\temp\openlayer.dir\Debug\BuildLog.htm"
openlayer - 1 error(s), 18 warning(s)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/openlayer-developer/attachments/20061106/676e7905/attachment.html>

From tobing at gmx.net  Mon Nov  6 11:15:18 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Mon, 06 Nov 2006 11:15:18 +0100
Subject: [Openlayer-developer] MSVC
In-Reply-To: <7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
References: <200611051745.35315.juvinious@gmail.com>
	<7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
Message-ID: <20061106101518.135350@gmx.net>

There definitely something wrong with your installation of MSVC - you're using version 8, right? Express or full version? 

Since I'm using version 7.1 I can't really help too much here. Maybe what I'd do in such a case is uninstall version 8, clean the system from remainders and stuff, then install and try again. 

Are there others who use version 8, too? 

> Ok here is the compilation log. At the end the C1900 error is displayed. 
> I removed msvc from my path also just in case. I don't know what p1 and 
> p2 are, it's not very descriptive. :x



> TexturedPoly.cpp
> ..\src\TexturedPoly.cpp(156) : warning C4288: nonstandard extension 
> used : 'iter' : loop control variable declared in the for-loop is used 
> outside the for-loop scope; it conflicts with the declaration in the 
> outer scope
>         ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
>         ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored

Oh, and you should name inner (loop) variables different from variables outside the loop. Easier and less confusing to read, and less error-prone also, because you might access a variable with a certain name, but get another variable of the same name. 

I've seen this in some places already, and it's always confusing... 

-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de



From juvinious at gmail.com  Tue Nov  7 02:25:29 2006
From: juvinious at gmail.com (Miguel A. Gavidia)
Date: Tue, 7 Nov 2006 09:25:29 +0800
Subject: [Openlayer-developer] MSVC
In-Reply-To: <20061106101518.135350@gmx.net>
References: <200611051745.35315.juvinious@gmail.com>
	<7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
	<20061106101518.135350@gmx.net>
Message-ID: <200611070925.29342.juvinious@gmail.com>

??? 06 11? 2006 18:15?tobing at gmx.net ????????:
> There definitely something wrong with your installation of MSVC - you're
> using version 8, right? Express or full version?
>
> Since I'm using version 7.1 I can't really help too much here. Maybe what
> I'd do in such a case is uninstall version 8, clean the system from
> remainders and stuff, then install and try again.
>
> Are there others who use version 8, too?
I have express and yes the other user I know had a full version.
We both uninstalled, cleaned up and re-installed everything same deal, no go.

Did you use the cmake to generate the project files for 7.1, to test it out?
>
> > Ok here is the compilation log. At the end the C1900 error is displayed.
> > I removed msvc from my path also just in case. I don't know what p1 and
> > p2 are, it's not very descriptive. :x
> >
> >
> >
> > TexturedPoly.cpp
> > ..\src\TexturedPoly.cpp(156) : warning C4288: nonstandard extension
> > used : 'iter' : loop control variable declared in the for-loop is used
> > outside the for-loop scope; it conflicts with the declaration in the
> > outer scope
> >         ..\src\TexturedPoly.cpp(155) : definition of 'iter' used
> >         ..\src\TexturedPoly.cpp(133) : definition of 'iter' ignored
>
> Oh, and you should name inner (loop) variables different from variables
> outside the loop. Easier and less confusing to read, and less error-prone
> also, because you might access a variable with a certain name, but get
> another variable of the same name.
>
> I've seen this in some places already, and it's always confusing...

-- 
-juvinious

http://chasm.hopto.org - The Chasm - My Site
http://openlayer.berlios.de - Openlayer


From tobing at gmx.net  Wed Nov  8 11:09:45 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Wed, 08 Nov 2006 11:09:45 +0100
Subject: [Openlayer-developer] MSVC
In-Reply-To: <200611070925.29342.juvinious@gmail.com>
References: <200611051745.35315.juvinious@gmail.com>
	<7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
	<20061106101518.135350@gmx.net>
	<200611070925.29342.juvinious@gmail.com>
Message-ID: <20061108100945.69630@gmx.net>


> I have express and yes the other user I know had a full version.
> We both uninstalled, cleaned up and re-installed everything same deal, no
> go.

Hm, no idea what's going wrong there. Unfortunately I can't easily try it myself, because I don't want to screw any of my PCs up with an installation of another Studio now. Maybe at a later time, when we have to use MSVC 8 for a newer release here anyway... 

Ah, did you build every library you use with MSVC 8 or did you include already compiled and linked libraries into your link step? Just a guess, but maybe the object files are not easily compatible? 


> Did you use the cmake to generate the project files for 7.1, to test it
> out?

I did now, but it didn't work. So first, I had a hard time to configure everything so that it seemed reasonable. Then I pressed OK, and cmake took quite a time to generate files, do some compilations etc, I can't say because cmake doesn't give any feedback about what it's doing. 

Eventually it finished and had created a solution and a bunch of project files - but didn't compile. There are assumptions left about the environment: First, I don't have the paths to my MSVC directories in my environment, just to avoid any confusion between different installed versions of MSVC on the same PC (have 6.0, 7.0 and 7.1 here). 

Then it assumes that the allegro directory is in the include path, which it isn't for the same reason actually, because I'm building many different projects with the different studio versions, so I can't put anything into the standard include path (same for lib path). I guess this could also be configured with cmake, making the configuration process even longer. Overall I like that most everything is configurable with cmake, but I don't see yet why it should be easier that way than having a solution and project files, which could be adopted to one's environment - well it may be easier for the deployment of the library. 

Why does cmake copy 'Openlayer.hpp' into it's build directory? 

Well, I have compared that file with the original file, but I think it's bad style to change the original file to put additional defines into that header file, or change anything else... 


-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de



From juvinious at gmail.com  Thu Nov  9 10:41:36 2006
From: juvinious at gmail.com (Miguel Gavidia)
Date: Thu, 9 Nov 2006 17:41:36 +0800
Subject: [Openlayer-developer] MSVC
In-Reply-To: <20061108100945.69630@gmx.net>
References: <200611051745.35315.juvinious@gmail.com>
	<7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
	<20061106101518.135350@gmx.net>
	<200611070925.29342.juvinious@gmail.com>
	<20061108100945.69630@gmx.net>
Message-ID: <7d8be2250611090141j2e14106dseed7ffeb91f3b698@mail.gmail.com>

On 11/8/06, tobing at gmx.net <tobing at gmx.net> wrote:
>
>
> > I have express and yes the other user I know had a full version.
> > We both uninstalled, cleaned up and re-installed everything same deal,
> no
> > go.
>
> >Hm, no idea what's going wrong there. Unfortunately I can't easily try it
> myself, because I >don't want to screw any of my PCs up with an installation
> of another Studio now. Maybe at >a later time, when we have to use MSVC 8
> for a newer release here anyway...


>Ah, did you build every library you use with MSVC 8 or did you include
> already compiled >and linked libraries into your link step? Just a guess,
> but maybe the object files are not >easily compatible?


Ok it seems it's not my environment I had to tweak the configuration to make
it  produce a lib. Now it links the library fine, but when trying to compile
the demos I'm back to the same spot with the C1900 errors. Frustrating, but
I'll figure it out.

> Did you use the cmake to generate the project files for 7.1, to test it
> > out?
>
> >I did now, but it didn't work. So first, I had a hard time to configure
> everything so that it >seemed reasonable. Then I pressed OK, and cmake took
> quite a time to generate files, do >some compilations etc, I can't say
> because cmake doesn't give any feedback about what >it's doing.


Yeah when it's creating the project files it sucks. It should at least tell
you or give some indication.

>Eventually it finished and had created a solution and a bunch of project
> files - but didn't >compile. There are assumptions left about the
> environment: First, I don't have the paths to >my MSVC directories in my
> environment, just to avoid any confusion between different >installed
> versions of MSVC on the same PC (have 6.0, 7.0 and 7.1 here).


>Then it assumes that the allegro directory is in the include path, which it
> isn't for the same >reason actually, because I'm building many different
> projects with the different studio >versions, so I can't put anything into
> the standard include path (same for lib path). I guess >this could also be
> configured with cmake, making the configuration process even longer.
> >Overall I like that most everything is configurable with cmake, but I don't
> see yet why it >should be easier that way than having a solution and project
> files, which could be adopted >to one's environment - well it may be easier
> for the deployment of the library.


Yes I'm totally aware of this and I'm working on including compensation for
those with separated installs and directories so that it's totally
configurable by the user. This will not however make it longer, it's just
long because it takes time for it to generate the project files. When it
creates unix/msys makefiles it takes but a few seconds.
The issue with not having static project files is that each environment is
not going to be the same.  Having cmake generate these files configured to
your environment is much more sound and increases the odds of deploying the
library to any environment.

>Why does cmake copy 'Openlayer.hpp' into it's build directory?
>
> >Well, I have compared that file with the original file, but I think it's
> bad style to change the >original file to put additional defines into that
> header file, or change anything else...


The original header doesn't compensate for the preprocessors that are passed
during compilation. You have to add these yourself and/or pass them whenever
you want to link against the lib. I've never heard of this as being bad
style, allegro does this as well as tons of other libraries. If you look at
the build directory you'll see there is an OpenLayer.hpp.in look at the
#cmakedefine macros and you'll see why.

Overall it's coming along, just give me some time to get the kinks out of
it.

--
> Viele Gr?sse / Best Regards / Amiti?s
> Tobing
>
> http://www.staedtebauen.de
>
> _______________________________________________
> Openlayer-developer mailing list
> Openlayer-developer at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/openlayer-developer
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/openlayer-developer/attachments/20061109/b76c2100/attachment.html>

From tobing at gmx.net  Fri Nov 24 18:59:16 2006
From: tobing at gmx.net (tobing at gmx.net)
Date: Fri, 24 Nov 2006 18:59:16 +0100
Subject: [Openlayer-developer] Linker error in Windows
In-Reply-To: <7d8be2250611090141j2e14106dseed7ffeb91f3b698@mail.gmail.com>
References: <200611051745.35315.juvinious@gmail.com>
	<7d8be2250611060116w300a5ea2sc71a73db4aa4a86d@mail.gmail.com>
	<20061106101518.135350@gmx.net>	<200611070925.29342.juvinious@gmail.com>
	<20061108100945.69630@gmx.net>
	<7d8be2250611090141j2e14106dseed7ffeb91f3b698@mail.gmail.com>
Message-ID: <20061124175916.27760@gmx.net>

Hi all, 

with the current SVN Windows (at least) doesn't link, because of missing symbol ol::firstLog. 

The content of Internal.cpp should be changed to the following: 

***

#include "Internal.hpp"

namespace ol
{

bool firstLog = true;

}

***

I tried to get a lock and do that myself, but I found I'm not allowed to make changes (seems that I'm not on the list yet). 

-- 
Viele Gr?sse / Best Regards / Amiti?s
Tobing

http://www.staedtebauen.de



From fladimir2002 at hotmail.com  Fri Nov 24 20:58:37 2006
From: fladimir2002 at hotmail.com (Esa Tanskanen)
Date: Fri, 24 Nov 2006 21:58:37 +0200
Subject: [Openlayer-developer] Linker error in Windows
In-Reply-To: <20061124175916.27760@gmx.net>
Message-ID: <BAY122-F17D5C6B9B2583566D89557DFE10@phx.gbl>

Thanks for pointing this out, I committed the changes.


>From: tobing at gmx.net
>Reply-To: openlayer-developer at berlios.de
>To: openlayer-developer at berlios.de
>Subject: [Openlayer-developer] Linker error in Windows
>Date: Fri, 24 Nov 2006 18:59:16 +0100
>
>Hi all,
>
>with the current SVN Windows (at least) doesn't link, because of missing 
>symbol ol::firstLog.
>
>The content of Internal.cpp should be changed to the following:
>
>***
>
>#include "Internal.hpp"
>
>namespace ol
>{
>
>bool firstLog = true;
>
>}
>
>***
>
>I tried to get a lock and do that myself, but I found I'm not allowed to 
>make changes (seems that I'm not on the list yet).
>
>--
>Viele Gr?sse / Best Regards / Amiti?s
>Tobing
>
>http://www.staedtebauen.de
>
>_______________________________________________
>Openlayer-developer mailing list
>Openlayer-developer at lists.berlios.de
>https://lists.berlios.de/mailman/listinfo/openlayer-developer

_________________________________________________________________
Uutiset ja kasvot uutisten takaa. MSN Search, t?yden palvelun hakukone. 
http://search.msn.fi



